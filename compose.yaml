services:
  frontend:
    build: ./frontend
    # Set the working directory for runtime (for `command`)
    working_dir: /app
    # Mount the project directory from the host to the container, allowing for
    # live reloads of the application code during development. Also, anonymously
    # mount the node_modules directory to persist dependencies across container
    # restarts and avoid the need for local installation of packages.
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_TELEMETRY_DISABLED=1
      - API_URL=http://backend:${BACKEND_PORT}
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    networks:
      - container-network
    restart: unless-stopped
    depends_on:
      - backend
    command: npm run dev


  backend:
    build: ./backend
    working_dir: /app
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - PORT=${BACKEND_PORT}
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
      - DATABASE_URL
      - SHADOW_DATABASE_URL
      # Disable Prisma telemetry
      - CHECKPOINT_DISABLE=1
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    networks:
      - container-network
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    # Generate the Prisma Client before starting the backend
    command: >
      sh -c "npx prisma generate
      && npx prisma migrate deploy
      && npm run dev"


  db:
    image: mysql:8.3
    environment:
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_ROOT_PASSWORD
    networks:
      - container-network
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    restart: unless-stopped
    healthcheck:
      test: mysqladmin ping -u ${MYSQL_USER} --password=${MYSQL_PASSWORD}
      interval: 5s
      timeout: 3s
      retries: 5
    depends_on:
      shadow-db:
        condition: service_healthy


  # Prisma ORM needs a second, temporary database that is created and deleted
  # automatically each time you run prisma migrate dev. Either you add extra
  # privileges to the main database user or you create a separate shadow db
  # cf https://www.prisma.io/docs/orm/prisma-migrate/understanding-prisma-migrate/shadow-database
  shadow-db:
    image: mysql:8.3
    environment:
      - MYSQL_DATABASE=${SHADOW_DATABASE}
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_ROOT_PASSWORD
    networks:
      - container-network
    ports:
      # Expose the container default MySQL port to the host's chosen port for
      # connecting to the shadow db
      - ${SHADOW_DB_PORT}:${MYSQL_PORT}
    restart: unless-stopped
    healthcheck:
      test: mysqladmin ping -u ${MYSQL_USER} --password=${MYSQL_PASSWORD}
      interval: 5s
      timeout: 3s
      retries: 5


networks:
  container-network:
    driver: bridge
